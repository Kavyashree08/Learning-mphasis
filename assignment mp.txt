1. Write a program in C# Sharp to store elements in an array and print it. 
Test Data:
Input 10 elements in the array:
element - 0 : 1
element - 1 : 1
element - 2 : 2


using System;  
public class Exercise1  
{  
    public static void Main()  
{  
    int[] arr = new int[10]; 
    int i;  
       Console.Write("\n\nRead and Print elements of an array:\n");
       Console.Write("-----------------------------------------\n");	
  
    Console.Write("Input 3 elements in the array :\n");  
    for(i=0; i<10; i++)  
    {  
	    Console.Write("element - {0} : ",i);
	    arr[i] = Convert.ToInt32(Console.ReadLine());  		
    }  
  
    Console.Write("\nElements in array are: ");  
    for(i=0; i<10; i++)  
    {  
        Console.Write("{0}  ", arr[i]);  
    } 
    Console.Write("\n");	
  }
}
.......
Expected Output :
Elements in array are: 1 1 2 3 4 5 6 7 8 9
===================================================
2. Write a program in C# Sharp to read n number of values in an array and display it in reverse order. 
Test Data :
Input the number of elements to store in the array :3
Input 3 number of elements in the array :
element - 0 : 2
element - 1 : 5
element - 2 : 7

using System;  
public class Exercise2  
{  
    public static void Main() 
{
   int i,n;
   int[] a= new int[100];
   
       Console.Write("\n\nRead n number of values in an array and display it in reverse order:\n");
       Console.Write("------------------------------------------------------------------------\n");
   
   Console.Write("Input the number of elements to store in the array :");
   n = Convert.ToInt32(Console.ReadLine());    
   
   
   Console.Write("Input {0} number of elements in the array :\n",n);
   for(i=0;i<n;i++)
      {
	  Console.Write("element - {0} : ",i);
	  a[i] = Convert.ToInt32(Console.ReadLine()); 
	  }
      
   Console.Write("\nThe values store into the array are : \n");
   for(i=0;i<n;i++)
     {
	   Console.Write("{0}  ",a[i]);
	 }
 
   Console.Write("\n\nThe values store into the array in reverse are :\n");
   for(i=n-1;i>=0;i--)
      {
	   Console.Write("{0} ",a[i]);
	  }
   Console.Write("\n\n");

Expected Output:
The values store into the array are:
2 5 7
The values store into the array in reverse are :
7 5 2
====================================================
3. Write a program in C# Sharp to find the sum of all elements of the array. 
Test Data :
Input the number of elements to be stored in the array :3
Input 3 elements in the array :
element - 0 : 2
element - 1 : 5
element - 2 : 8


using System;  
public class Exercise3  
{  
    public static void Main() 
{
    int[] a= new int[100];
    int i, n, sum=0;
	
	
       Console.Write("\n\nFind sum of all elements of array:\n");
       Console.Write("--------------------------------------\n");	

       Console.Write("Input the number of elements to be stored in the array :");
	   n = Convert.ToInt32(Console.ReadLine()); 
   
       Console.Write("Input {0} elements in the array :\n",n);
       for(i=0;i<n;i++)
        {
	      Console.Write("element - {0} : ",i);
		  a[i] = Convert.ToInt32(Console.ReadLine()); 
	    }

    for(i=0; i<n; i++)
    {
        sum += a[i];
    }

    Console.Write("Sum of all elements stored in the array is : {0}\n\n", sum);
  }
}


Sum of all elements stored in the array is : 15
4. Write a program in C# Sharp to copy the elements one array into another array. Go to the editor
Test Data :
Input the number of elements to be stored in the array :3
Input 3 elements in the array :
element - 0 : 15
element - 1 : 10
element - 2 : 12


using System;
 
public class GFG {
     
    // Main method
    static public void Main()
    {
 
        // create and initialize array
        int[] myarray = {445, 44, 66, 6666667, 78, 878, 1};
 
        // Display the array
        Console.WriteLine("The elements of myarray :");
         
        foreach(int i in myarray)
        {
            Console.WriteLine(i);
        }
 
        // Find the number of element in myarray
        int result = myarray.GetLength(0);
        Console.WriteLine("Total Elements: {0}", result);
    }


Expected Output:
The elements stored in the first array are :
15 10 12
The elements copied into the second array are :
15 10 12
from Arvind Kumar Trainer to All Participants:
5. Write a program in C# Sharp to count a total number of duplicate elements in an array. 
Test Data :
Input the number of elements to be stored in the array :3
Input 3 elements in the array :
element - 0 : 5
element - 1 : 1
element - 2 : 1


using System;  
public class Exercise5
{  
    public static void Main() 
{
	int[] arr1 = new int[100];
	int[] arr2 = new int[100];
	int[] arr3 = new int[100];	
    int s1, s2,mm=1,ctr=0;
    int i, j;
       Console.Write("\n\nCount total number of duplicate elements in an array:\n");
       Console.Write("---------------------------------------------------------\n");	
	   
       Console.Write("Input the number of elements to be stored in the array :");
	   s1 = Convert.ToInt32(Console.ReadLine()); 	   
   
       Console.Write("Input {0} elements in the array :\n",s1);
       for(i=0;i<s1;i++)
            {
	      Console.Write("element - {0} : ",i);
	     arr1[i] = Convert.ToInt32(Console.ReadLine()); 		  
	    }
/*----------------- copy in other array ------------------------------------*/
		for(i=0;i<s1; i++)
        {
		arr2[i]=arr1[i];
		arr3[i]=0;
        }
/*------------------- mark the elements are duplicate -------------------------*/
	for(i=0;i<s1; i++)
        {
		for(j=0;j<s1;j++)
			{
				if(arr1[i]==arr2[j])
				{
				arr3[j]=mm;
				mm++;
				}
			}
			mm=1;
        }
/*--------------- Prints the array ------------------------------------*/
   for(i=0; i<s1; i++)
    {
      if(arr3[i]==2){ctr++;}  
    }
    Console.Write("The number of duplicate elements is: {0} \n", ctr);
    
	Console.Write("\n\n");
  }
}
Expected Output :
Total number of duplicate elements found in the array is : 1
===============================================
6. Write a program in C# Sharp to print all unique elements in an array.
Test Data :
Input the number of elements to be stored in the array :3
Input 3 elements in the array :
element - 0 : 1
element - 1 : 5
element - 2 : 1


using System;
public class Exercise6
{
    public static void Main()
{
    int  n,ctr=0;
	int[] arr1 = new int[100];
    int i, j, k;
       Console.Write("\n\nPrint all unique elements of an array:\n");
       Console.Write("------------------------------------------\n");	
       Console.Write("Input the number of elements to be stored in the array :");
	   n = Convert.ToInt32(Console.ReadLine()); 	   
       Console.Write("Input {0} elements in the array :\n",n);
       for(i=0;i<n;i++)
            {
	      Console.Write("element - {0} : ",i);
          arr1[i] = Convert.ToInt32(Console.ReadLine()); 		  
	    }
    	/*Checking duplicate elements in the array */
    	Console.Write("\nThe unique elements found in the array are : \n");
    	for(i=0; i<n; i++)
    	{
        ctr=0;
		/*Check duplicate bifore the current position and
		increase counter by 1 if found.*/
        for(j=0; j<i-1; j++)
        {
            /*Increment the counter when the seaarch value is duplicate.*/
            if(arr1[i]==arr1[j])
            {
                ctr++;
            }
        }
        /*Check duplicate after the current position and
		  increase counter by 1 if found.*/
       	for(k=i+1; k<n; k++)
        {
            /*Increment the counter when the seaarch value is duplicate.*/
            if(arr1[i]==arr1[k])
            {
                ctr++;
            }
		     /* Duplicate numbers next to each other*/
            if(arr1[i]==arr1[i+1])
            {
                i++;
            }
        }
		 /*Print the value of the current position of the array as unique value
			when counter remain contains its initial value.*/
       	if(ctr==0)
        {
          Console.Write("{0} ",arr1[i]);
        }
    }
       Console.Write("\n\n");
  }
}
Expected Output :
The unique elements found in the array are :
5
==================================================
7. Write a program in C# Sharp to merge two arrays of same size sorted in ascending order. Go to the editor
Test Data :
Input the number of elements to be stored in the first array :3
Input 3 elements in the array :
element - 0 : 1
element - 1 : 2
element - 2 : 3
Input the number of elements to be stored in the second array :3
Input 3 elements in the array:
element - 0 : 1
element - 1 : 2
element - 2 : 3



using System;  
public class Exercise7
{  
    public static void Main() 
{
	int[] arr1 = new int[100];
	int[] arr2 = new int[100];
	int[] arr3 = new int[200];
    int s1, s2, s3;
    int i, j, k;
	
	
       Console.Write("\n\nMerge two arrays of same size sorted in ascending order.\n");
       Console.Write("------------------------------------------------------------\n");	
	   
       Console.Write("Input the number of elements to be stored in the first array :");
	   s1 = Convert.ToInt32(Console.ReadLine()); 	   
   
       Console.Write("Input {0} elements in the array :\n",s1);
       for(i=0;i<s1;i++)
            {
	      Console.Write("element - {0} : ",i);
	     arr1[i] = Convert.ToInt32(Console.ReadLine()); 		  
	    }


       Console.Write("Input the number of elements to be stored in the second array :");
	   s2 = Convert.ToInt32(Console.ReadLine()); 	   
   
       Console.Write("Input {0} elements in the array :\n",s2);
       for(i=0;i<s2;i++)
            {
	      Console.Write("element - {0} : ",i);
	     arr2[i] = Convert.ToInt32(Console.ReadLine()); 		  
	    }

    /* size of merged array is size of first array and  size of second array */
    s3 = s1 + s2;
     
/*----------------- insert in the third array------------------------------------*/
    for(i=0;i<s1; i++)
        {
            arr3[i] = arr1[i];
         }
     for(j=0;j<s2; j++)
        {
            arr3[i] = arr2[j];
            i++; 
        }
/*----------------- sort the array in ascending order ---------------------------*/
   for(i=0;i<s3; i++)
        {
           for(k=0;k<s3-1;k++)
             {
         
                if(arr3[k]>=arr3[k+1])
                 {
                   j=arr3[k+1];
                   arr3[k+1]=arr3[k];
                   arr3[k]=j;
                 }  
              }
         }                      
/*--------------- Prints the merged array ------------------------------------*/
    Console.Write("\nThe merged array in ascending order is :\n");
    for(i=0; i<s3; i++)
    {
        Console.Write("{0} ", arr3[i]);
    }
	Console.Write("\n\n");


Expected Output:
The merged array in ascending order is :
1 1 2 2 3 3
============================================================
8. C# program to tranpose a matrix

using System;
public class Demo {
   public static void Main() {
      int i, j, m, n;
      int[, ] arr1 = new int[30, 30];
      int[, ] arr2 = new int[30, 30];

      Console.Write("\nEnter the number of rows and columns of the matrix :\n");
      Console.Write("Rows entered = ");
      m = Convert.ToInt32(Console.ReadLine());

      Console.Write("Columns entered = ");
      n = Convert.ToInt32(Console.ReadLine());

      Console.Write("Set elements in the matrix...\n");
      for (i = 0; i < m; i++) {
         for (j = 0; j < n; j++) {
            Console.Write("\n [{0}],[{1}] : ", i, j);
            arr1[i, j] = Convert.ToInt32(Console.ReadLine());
         }
      }

      Console.Write("\n\nMatrix before Transpose:\n");
      for (i = 0; i < m; i++) {
         Console.Write("\n");
         for (j = 0; j < n; j++)
         Console.Write("{0}\t", arr1[i, j]);
      }

      for (i = 0; i < m; i++) {
         for (j = 0; j < n; j++) {

            arr2[j, i] = arr1[i, j];
         }
      }

      Console.Write("\n\nMatrix after Transpose: ");
      for (i = 0; i < m; i++) {
         Console.Write("\n");
         for (j = 0; j < n; j++) {
            Console.Write("{0}\t", arr2[i, j]);
         }
      }
      Console.Write("\n\n");
   }


9.  C# program to print the upper triangular matrix
sing System;
using System.Linq;
class Demo {
   static void Main() {
      int m, n, i, j;
      Console.Write("Enter number of rows and columns of the matrix ");
      m = Convert.ToInt16(Console.ReadLine());
      n = Convert.ToInt16(Console.ReadLine());
      int[,] A = new int[10, 10];
      Console.Write("\nEnter elements: ");
      for (i = 0; i < m; i++) {
         for (j = 0; j < n; j++) {
            A[i, j] = Convert.ToInt16(Console.ReadLine());
         }
      }
      Console.WriteLine("\nUpper Triangular Matrix ");
      for (i = 0; i < m; i++) {
         for (j = 0; j < n; j++) {
            Console.Write(A[i, j] + "\t");
         }
         Console.WriteLine();
      }
      for (i = 0; i < m; i++) {
         Console.Write("\n");
         for (j = 0; j < 3; j++) {
            if (i >= j)
               Console.Write(A[i, j] + "\t");
            else
               Console.Write("0\t");
         }
      }
      Console.ReadLine();
   }
}

10. C# find the larget element in the matrix.

//C# program to find the largest element in the matrix.

using System;

class MatrixDemo
{
    public static void Main(string[] args)
    {
        int i = 0;
        int j = 0;

        int row     = 3;
        int col     = 3;
        int large   = 0;

        int[,] Matrix= new int[row, col];
        
        Console.Write("Enter the elements of matrix: ");
        for (i = 0; i < row; i++)
        {
            for (j = 0; j < col; j++)
            {
                Matrix[i, j] = int.Parse(Console.ReadLine());

                if (large < Matrix[i, j])
                    large = Matrix[i, j];
            }
        }
        
        Console.WriteLine("\nMatrix: ");
        for (i = 0; i < row; i++)
        {
            for (j = 0; j < col; j++)
            {
                Console.Write(Matrix[i, j] + "\t");

            }
            Console.WriteLine();
        }

        Console.WriteLine("Largest element is : "+large);
    }
}

11. C# program to swap of two arrays

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            //Declare to manage index of arrays
            int index = 0;

            //Temporary variable two swap arrays
            int temp = 0;

            //Declare array that contains 5 integer elements
            int[] arr1 = new int[5];
            int[] arr2 = new int[5];

            //Now read values for first array elements.
            Console.WriteLine("Enter value of array1 elements...");
            for (index = 0; index < arr1.Length; index++)
            {
                Console.Write("Element arr1[" + (index + 1) + "]: ");
                arr1[index] = int.Parse(Console.ReadLine());
            }

            //Now read values for second array elements.
            Console.WriteLine("Enter value of array2 elements...");
            for (index = 0; index < arr2.Length; index++)
            {
                Console.Write("Element arr2[" + (index + 1) + "]: ");
                arr2[index] = int.Parse(Console.ReadLine());
            }

            Console.WriteLine("\n\nBefore Swapping...");
            Console.WriteLine("Array 1 Elements\n");
            for (index = 0; index < 5; index++)
            {
                Console.Write(arr1[index] + " ");
            }
            Console.WriteLine("\nArray 2 Elements\n");
            for (index = 0; index < 5; index++)
            {
                Console.Write(arr2[index] + " ");
            }

            Console.WriteLine();
            Console.WriteLine();

            //Now we swap two arrays
            for (index = 0; index < 5; index++)
            {
                temp        = arr1[index];
                arr1[index] = arr2[index];
                arr2[index] = temp;

            }
            
            Console.WriteLine("\n\nAfter Swapping...");
            Console.WriteLine("Array 1 Elements\n");
            for (index = 0; index < 5; index++)
            {
                Console.Write(arr1[index]+" ");
            }
            Console.WriteLine("\nArray 2 Elements\n");
            for (index = 0; index < 5; index++)
            {
                Console.Write(arr2[index] + " ");
            }
            
            Console.WriteLine();
        }
    }
}

12. Create a Arraylist and input elements and Sort them in asceding,descending , Add(),remove(),removeAt(),removeRange() method to manage the arraylist
13.  Use List to create 5 elements and show total number of element after adding, removing

 
14 . Create a List for string and use the Count() method to see number of elements in List<string>
15.  C# program to Add the elements in List <int> and do Sorting with ascendig or Descending order .    
    -also remove a spefic items
    -also remove more than one items using removeRange()
16. C# Program to Add the elemnt in Linked List and do the all operatons, AddFirst,AddLast ,Remove, count,contains
17. C# program to use Dictionary <KV> to add the number items and display it based on datatypes
        -<string,int>
        -<string,float>
        -<string,double>
        -Sort the item based 

18.C# program to create HashSet to add the 10 elements  and access them using foreach loop
        -after that remove elemets from hasset using
            -Remove(T)
            -RemoveWhere()
            -Clear()
        -Show all the element after applied this method
